@inject IProductService ProductService
@inject NavigationManager NavigationManager


<div class="input-group">
    <input
        @bind-value = "SearchText"
        @bind-value:event = "oninput"
        type="search"
        list="products"
        @onkeypress="HandleSearch"
        class="form-control"
        placeholder="Search"
        @ref = "searchInput"
    />
    <datalist id="products">
        @if(suggestions != null || suggestions.Count() > 0)
        {
            @foreach (var item in suggestions)
       {
           <option>@item</option>
       }
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-primary" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>


@code {
    private string SearchText { get; set; } = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await searchInput.FocusAsync();
        }
    }

    public void SearchProducts()
    {
        NavigationManager.NavigateTo($"search/{SearchText}/1");
    }

    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if(args.Key == null || args.Key.Equals("Enter"))
        {
            SearchProducts();
        }
        else if (SearchText.Length > 1)
        {
            suggestions = await ProductService.GetProductSearchSuggestions(SearchText);
        }
    }
}
